@model Parrucchiere.Models.Recensioni

@{
    ViewBag.Title = "Create";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h2 class="card-title">Esprimi la tua opinione</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Testo, htmlAttributes: new { @class = "control-label" })
                        <div>
                            <div class="form-floating">
                                <textarea class="form-control" name="Testo" placeholder="Dicci cosa ne pensi" id="floatingTextarea2" style="height: 100px"></textarea>
                                <label for="floatingTextarea2">Recensione</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Testo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Valutazione, htmlAttributes: new { @class = "control-label" })
                        <div class="star-rating">
                            <i class="bi bi-star star fs-3" data-rating="1"></i>
                            <i class="bi bi-star star fs-3" data-rating="2"></i>
                            <i class="bi bi-star star fs-3" data-rating="3"></i>
                            <i class="bi bi-star star fs-3" data-rating="4"></i>
                            <i class="bi bi-star star fs-3" data-rating="5"></i>
                            @Html.HiddenFor(model => model.Valutazione, new { @id = "valutazione" })
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        const allStars = document.querySelectorAll("i");

        // Ciclo attraverso le stelle (i) e aggiungo un evento di click
        allStars.forEach((e, index) => {
            e.addEventListener("click", function () {
                selectionStars(index);
                // Aggiorno il campo nascosto con il valore del rating
                document.getElementById("valutazione").value = index + 1;
            });
        });

        // Funzione per colorare le stelle selezionate
        const selectionStars = (index) => {
            for (let i = index; i < 5; i++) {
                allStars[i].className = "bi bi-star star fs-3";
            }

            for (let i = 0; i < index + 1; i++) {
                allStars[i].className = "bi bi-star-fill star text-success fs-3";
            }
        };
    </script>
}
