@model Parrucchiere.Models.Recensioni

@{
    ViewBag.Title = "Edit";
}



<link href="~/Content/Site.css" rel="stylesheet" />

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="">
                <div class=" glass ">
                    <div>
                        <h2 class="card-title text-center mt-2">Modifica la tua opinione</h2>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal w-100 mx-auto">
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group text-center">
                                <label> Modifica il tuo testo </label>
                                <div>
                                    <div class="form-floating d-flex justify-content-center align-items-center">
                                        @Html.TextAreaFor(model => model.Testo, new { @class = "form-control", @rows = 4, @cols = 40 })

                                    </div>
                                    @Html.ValidationMessageFor(model => model.Testo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group text-center mt-4">
                                @Html.LabelFor(model => model.Valutazione, htmlAttributes: new { @class = "control-label" })
                                <div class="star-rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        string starClass = i <= Model.Valutazione ? "bi-star-fill text-success fs-3" : "bi-star fs-3";
                                        <i class="bi @starClass" data-rating="@i"></i>
                                    }
                                    @Html.HiddenFor(model => model.Valutazione, new { @id = "valutazione" })
                                </div>
                            </div>

                                <div class="form-group d-flex justify-content-center align-items-center mt-3 mb-3">

                                    <button id="btn" type="submit">
                                        <p id="btnText" class="mt-2">Invia</p>
                                        <div class="check-box">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
                                                <path fill="transparent" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
                                            </svg>
                                        </div>
                                    </button>

                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script>
        const allStars = document.querySelectorAll("i");

        // Ciclo attraverso le stelle (i) e aggiungo un evento di click
        allStars.forEach((e, index) => {
            e.addEventListener("click", function () {
                selectionStars(index);
                // Aggiorno il campo nascosto con il valore del rating
                document.getElementById("valutazione").value = index + 1;
            });
        });

        // Funzione per colorare le stelle selezionate
        const selectionStars = (index) => {
            for (let i = index; i < 5; i++) {
                allStars[i].className = "bi bi-star star fs-3";
            }

            for (let i = 0; i < index + 1; i++) {
                allStars[i].className = "bi bi-star-fill star text-success fs-3";
            }
        };
    </script>
}